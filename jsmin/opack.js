var verbs={info:{help:"Provides information about the current package.",optionshelp:["If no option is provided will look for the package in the current directory.","If an URL is provided will look for the package in the repository.","Else it will try to access the directory specified."]},search:{help:"Searches for a keyword on the repository.",optionshelp:["Searches the keyword passed as an option."]},install:{help:"Install a package",optionshelp:"Provide the path or URL to the package directory or opack file.;'-d'       : Installation directory for package.;'-force'   : Force installation;'-repo'    : Use an alternatively repository for dependencies;'-deps'    : Automatically try to install dependencies;'-useunzip': Alternatively use unzip to save memory;'-noverify': Don't run hash verification on the end;'-arg'     : Pass an argument to the pre/post install scripts".split(";")},
erase:{help:"Deletes a package",optionshelp:["Deletes a package on the path specified","(only files declared on the package.json will be deleted)","'-force': Force operation even with package dependencies","'-arg'  : Pass an argument to the pre/post erase scripts"]},update:{help:"Updates a package",optionshelp:["The install/erase verbs options are valid also for update.","'-all'  : Tries to update all packages locally installed","'-erase': When updating delete the package frist"]},exec:{help:"Executes code from an installed package",
optionshelp:["Loads the main script of a local installed package."]},list:{help:"List installed packages",optionshelp:[]},pack:{help:"Generates a opack file from a packaging directory",optionshelp:""},genpack:{help:"Generates a package.json for packaging.",optionshelp:""},add2db:{help:"Add an already installed package to the local OpenPack database",optionshelp:[]},remove4db:{help:"Remove a package entry from the local OpenPack database",optionshelp:[]},add2remotedb:{},remove2remotedb:{}};plugin("ZIP");
plugin("HTTP");ow.loadFormat();var localDB,remoteDB,zipCache={},outputPath,verb,arg,homeIP="192.168.40.110",alternativeIP="172.25.1.32";
function showHelp(){print("Usage: opack [verb] [package/path] [options]\n");var b=0;for(i in verbs)i.length>b&&(b=i.length);print("Verbs:\n");for(i in verbs){var a=verbs[i];if(!isUndefined(a.help))for(j in print("   "+i+repeat(b-i.length+1," ")+" - "+a.help),a.optionshelp)print(repeat(b," ")+"          "+a.optionshelp[j])}print("");print("(version "+af.getVersion()+", "+Packages.wedo.openaf.AFCmdBase.LICENSE+")")}
function getHTTPOPack(b){if(!isUndefined(zipCache[b]))return zipCache[b];log("Retriving "+b);try{var a=new HTTP(b.replace(/ /g,"%20"),"GET","",{},!0),c=new ZIP(a.responseBytes());return zipCache[b]=c}catch(d){logErr("Can't retrieve "+b+" ("+d.message+")")}}function getRemoteDB(){return isUndefined(remoteDB)?remoteDB=getOPackRemoteDB():remoteDB}
function addRemoteDB(b,a){var c={};plugin("ZIP");var d=new ZIP;try{c=fromJsonYaml(af.fromBytes2String(d.streamGetFile(a,OPACKCENTRALJSON)))}catch(e){}delete b.__filelocation;delete b.filesHash;c[b.name]=b;try{d.streamPutFile(a,OPACKCENTRALJSON,af.fromString2Bytes(stringify(c)))}catch(e){logErr(e.message)}}
function removeRemoteDB(b,a){var c={};plugin("ZIP");var d=new ZIP;try{c=fromJsonYaml(af.fromBytes2String(d.streamGetFile(a,OPACKCENTRALJSON)))}catch(e){}delete c[b];try{d.streamPutFile(a,OPACKCENTRALJSON,af.fromString2Bytes(stringify(c)))}catch(e){logErr(e.message)}}
function addLocalDB(b,a){var c=getOpenAFPath()+"/"+PACKAGESJSON_DB;try{a=(new java.io.File(a)).getCanonicalPath()+""}catch(f){logErr(f.message)}var d={},e=new ZIP;try{d=fromJsonYaml(af.fromBytes2String(e.streamGetFile(c,PACKAGESJSON)))}catch(f){f.message.match(/FileNotFoundException/)||logErr(f.message)}isUndefined(d)&&(d={});d[a]=b;try{e.streamPutFile(c,PACKAGESJSON,af.fromString2Bytes(stringify(d)))}catch(f){logErr(f.message);return}"OPENAF"!=b.name.toUpperCase()&&log("Package "+b.name+" added to local OpenPack DB")}
function getPackVersion(b,a){if("OPENAF"==b.toUpperCase())return getVersion();getLocalDB(!0);if(isUndefined(a)){if(b=findLocalDBByName(b),!isUndefined(b))return b.version}else return a.version}function getLocalDB(b){return 0!=b||isUndefined(localDB)?localDB=getOPackLocalDB():localDB}function findLocalDBByTarget(b){return getLocalDB()[b]}
function findLocalDBByName(b){var a=getLocalDB();if(!(isUndefined(b)||0>=b.length))for(target in a){var c=a[target];if(c.name.toUpperCase()==b.toUpperCase())return c}}function findLocalDBTargetByName(b){var a=getLocalDB();if(!(isUndefined(b)||0>=b.length))for(target in a)if(a[target].name.toUpperCase()==b.toUpperCase())return target}
function verifyDeps(b){var a=getOpenAFPath()+"/"+PACKAGESJSON_DB,c={};try{var d=new ZIP;fromJsonYaml(af.fromBytes2String(d.streamGetFile(a,PACKAGESJSON)))}catch(e){}for(dep in b.dependencies)a=b.dependencies[dep],d=findLocalDBByName(dep),c[dep]=!1,isUndefined(d)||(d.version==a?c[dep]=!0:a.match(/^\>\=/)&&d.version>=a.replace(/^\>\=/,"")?c[dep]=!0:a.match(/^\<\=/)&&d.version<=a.replace(/^\<\=/,"")?c[dep]=!0:a.match(/^\<(?=[^=])/)&&d.version<a.replace(/^\</,"")?c[dep]=!0:a.match(/^\>(?=[^=])/)&&d.version>
a.replace(/^\>/,"")&&(c[dep]=!0));return c}function removeLocalDB(b,a){var c=getOpenAFPath()+"/"+PACKAGESJSON_DB;a=(new java.io.File(a)).getCanonicalPath()+"";var d={},e=new ZIP;try{d=fromJsonYaml(af.fromBytes2String(e.streamGetFile(c,PACKAGESJSON)))}catch(f){logErr(f.message)}if(!isUndefined(d)){delete d[a];try{e.streamPutFile(c,PACKAGESJSON,af.fromString2Bytes(stringify(d)))}catch(f){logErr(f.message);return}}log("Package "+b.name+" removed from local OpenPack DB")}
function checkOpenAFinDB(){var b=getPackage(getOpenAFJar());isUndefined(b.name)||addLocalDB(b,getOpenAFPath())}function listFiles(b,a){var c=[];isUndefined(a)&&(a="");b=b.replace(/\\+/g,"/");a=a.replace(/\\+/g,"/");var d=io.listFiles(b+"/"+a);for(i in d.files){var e=d.files[i];e.isFile?c.push(a+e.filename.replace(/\\+/g,"/")):c=c.concat(listFiles(b,e.filepath.replace(new RegExp(b+"[\\\\/]*",""),"")+"/"))}return c}
function listFilesWithHash(b){var a={},c=listFiles(b),d=0;for(i in c){d++;try{lognl("Checking ("+ow.format.round(100*d/c.length)+"%) "+ow.format.addNumberSeparator(d)+" files\r"),c[i].match(new RegExp(PACKAGEJSON+"$",""))&&c[i].match(new RegExp(PACKAGEYAML+"$",""))||(a[c[i]]=sha1(io.readFileStream(b+"/"+c[i]))+"")}catch(e){}}0<d&&print("");return a}
function verifyHashList(b,a){var c={},d="local",e,f=new ZIP;b.match(/^http/)&&(d="http");b.match(/\.(opack)|(jar)$/)&&("http"==d?(d="opackhttp",e=new HTTP(b.replace(/ /g,"%20"),"GET","",{},!0),f=new ZIP(e.responseBytes())):(d="opack",f=new ZIP));"http"==d&&(e=new HTTP(b.replace(/ /g,"%20")+"/"+file.replace(/ /g,"%20")));var g=0;for(file in a){g++;printnl("Verifying ("+ow.format.round(100*g/Object.keys(a).length)+"%) "+ow.format.addNumberSeparator(g)+" files\r");c[file]=!1;var h;switch(d){case "local":h=
sha1(io.readFileStream(b+"/"+file))+"";break;case "http":h=sha1(e.responseBytes())+"";break;case "opack":h="opack"==d?sha1(f.streamGetFile(file)):sha1(f.getFile(file))+"";break;case "opackhttp":h="opackhttp"==d?sha1(f.streamGetFile(file)):sha1(f.getFile(file))+""}h==a[file]&&(c[file]=!0)}0<g&&print("");f.close();return c}
function copyFile(b,a){mkdir(a.replace(/\/[^\/]+$/,"/"));try{java.nio.file.Files.copy(java.nio.file.Paths.get(b),java.nio.file.Paths.get(a),java.nio.file.StandardCopyOption.REPLACE_EXISTING)}catch(c){if(!c.message.match(/DirectoryNotEmptyException/))throw c;}}function deleteFile(b){af.rm(b)}function mkdir(b){af.mkdir(b)}function rmdir(b){af.rm(b)}
function getOpenAFSB(){var b=java.lang.System.getProperty("os.name")+"",a=java.lang.management.ManagementFactory.getRuntimeMXBean().getClassPath()+"",a=b.match(/Windows/)?a.replace(/openaf\.jar/,"openaf.bat"):a.replace(/openaf\.jar/,"openaf-sb");try{io.readFileString(a)}catch(c){return logErr("Can't access "+a),null}return b.match(/Windows/)?a+" -s -i script -f ":a}function getOpenAFJar(){return java.lang.management.ManagementFactory.getRuntimeMXBean().getClassPath()+""}
function getOpenAF(){var b=java.lang.System.getProperty("os.name")+"",a=java.lang.management.ManagementFactory.getRuntimeMXBean().getClassPath()+"",a=b.match(/Windows/)?a.replace(/openaf\.jar/,"openaf.bat"):a.replace(/openaf\.jar/,"openaf");try{io.readFileString(a)}catch(c){return logErr("Can't access "+a),null}return b.match(/Windows/)?a+" -s -i script -f ":a}
function fixSheBang(b){var a=io.readFileAsArray(b);a[0].match(/^\#\!/)&&(a[0]="#!/usr/bin/env "+getOpenAFSB());io.writeFileAsArray(b,a);try{af.sh("chmod u+rx "+b)}catch(c){}}function runScript(b){try{(new Function(b))()}catch(a){logErr(a)}}function findCaseInsensitive(b,a){for(i in b)if(i.toUpperCase()==a.toUpperCase())return b[i]}function fromJsonYaml(b){try{return af.fromJson(b)}catch(a){return af.fromYAML(b)}}
function getPackage(b){var a={};if(isUndefined(b))return a;if(b.match(/^http/i))if(b.match(/\.(opack)|(jar)$/i)){var c=getHTTPOPack(b);if(isUndefined(c))return;try{a=fromJsonYaml(af.fromBytes2String(c.getFile(PACKAGEJSON)).replace(/\n/g,"")+"")}catch(g){a=fromJsonYaml(af.fromBytes2String(c.getFile(PACKAGEYAML))+"")}if(isUndefined(a.files)){a.files=[];var d=c.list();for(i in d)a.files.push(i)}a.__filelocation="opackurl"}else try{var e,f;try{e=new HTTP(b.replace(/ /g,"%20")+"/"+PACKAGEJSON,"GET","",
{},!0),f=af.fromBytes2String(e.responseBytes()).replace(/\n/g,"")}catch(g){e=new HTTP(b.replace(/ /g,"%20")+"/"+PACKAGEYAML,"GET","",{},!0),f=af.fromBytes2String(e.responseBytes())}b.match(alternativeIP)&&f.match(homeIP)&&(f=f.replace(new RegExp(homeIP,"g"),alternativeIP));a=fromJsonYaml(f);if(isUndefined(a))throw b+"/"+PACKAGESJSON;a.__filelocation="url"}catch(g){if(g.message.match(/Connection refused/)&&b.match(homeIP))return getPackage(b.replace(homeIP,alternativeIP));logErr("Didn't find a package on '"+
b+"' ("+g.message+")");return}else if(b.match(/\.(opack)|(jar)$/i))try{c=new ZIP;try{a=fromJsonYaml(af.fromBytes2String(c.streamGetFile(b,PACKAGEJSON))+"")}catch(g){a=fromJsonYaml(af.fromBytes2String(c.streamGetFile(b,PACKAGEYAML))+"")}if(isUndefined(a.files))for(i in a.files=[],d=c.list(),d)a.files.push(i);a.__filelocation="opacklocal"}catch(g){printErr(g.message);return}else try{try{a=io.readFile(b+"/"+PACKAGEJSON)}catch(g){a=io.readFileYAML(b+"/"+PACKAGEYAML)}a.__filelocation="local";a.__target=
(new java.io.File(b)).getCanonicalPath()+"";isUndefined(a.files)&&(a.files=listFiles(b))}catch(g){}return a}
function __opack_info(b){if(!isUndefined(b[0])&&""!=b[0]){var a=getPackage(b[0]),c;if(isUndefined(a)||isUndefined(a.name))if(a=findLocalDBByName(b[0]),isUndefined(a)||isUndefined(a.name)){a=getRemoteDB();c=findCaseInsensitive(a,b[0]);if(isUndefined(c)){logErr("No entry for '"+b[0]+"' on remote OPack database.");logErr("Package not found.");return}a=getPackage(c.repository.url);isUndefined(a)&&!isUndefined(c.repository.backupurl)&&(a=getPackage(c.repository.backupurl));b[0]=a.repository.url;a.__filelocation=
"remote"}else b[0]=findLocalDBTargetByName(b[0]),a.__filelocation="local";else a.__filelocation="local";c=a.__filelocation.match(/local$/)?!1:!0;print("INSTALLED IN: "+b[0]);print("NAME        : "+a.name);print("VERSION     : "+a.version);print("DESCRIPTION : "+a.description);print("AUTHOR      : "+a.author);print("REPOSITORY  : ["+a.repository.type+"] "+a.repository.url);print("DEPENDS ON  :");print("");var d;c||(d=verifyDeps(a));for(i in a.dependencies){var e=a.dependencies[i];c?print("\t"+i+": "+
e):print("\t"+i+": "+e+" ["+(d[i]?"OK":"FAILED DEPENDENCY")+"]")}var f;c||(f=verifyHashList(b[0],a.filesHash));print("FILES       :");for(i in a.files)d=a.files[i],d==PACKAGEJSON||d==PACKAGEYAML||isUnDef(d)||null==d||(c?print("\t"+d.replace(new RegExp("^"+b[0].replace(/\./g,"\\."),"")+"/","").replace(/^\/*/,"")):(e=isUndefined(f[d])?"not installed":f[d]?"OK":"CHANGED!",print("\t"+d.replace(new RegExp("^"+b[0].replace(/\./g,"\\."),"")+"/","").replace(/^\/*/,"")+" ["+e+"]")))}}
function __opack_list(b){b=getLocalDB(!0);var a={};for(i in b)isDef(b[i].name)&&(a[b[i].name.toLowerCase()]=i);var c=Object.keys(a).sort();for(packageId in c)packag=a[c[packageId]],"OpenPackDB"!=packag&&print("["+b[packag].name+"] (version "+b[packag].version+"): "+packag+"")}
function checkVersion(b,a){var c=getPackVersion(b.name);if(c>b.version&&!a)return log("Installed version is newer "+c),0;if(c!=b.version||a)return 1;log(b.name+", version "+c+", already installed in '"+findLocalDBTargetByName(b.name)+"'.");return 0}
function install(b){if(!(isUndefined(b[0])||0>=b[0].length))if(isUndefined(b[0])||"OPENAF"!=b[0].toUpperCase()){checkOpenAFinDB();var a=getPackage(b[0]),c=!1,d=!1,e=!1,f=!1,g=!1,h=!1,n=!1,k=!1,l=!1,m;m=getOpenAFPath()+"/"+a.name;for(i in b)c&&(m=b[i],c=!1,l=!0),e&&(OPACKCENTRALDB=b[i],e=!1),f&&(arg=b[i],f=!1),"-d"==b[i]&&(c=!0),"-force"==b[i]&&(d=!0),"-repo"==b[i]&&(e=!0),"-deps"==b[i]&&(k=!0),"-arg"==b[i]&&(f=!0),"-justcopy"==b[i]&&(g=!0),"-noverify"==b[i]&&(n=!0),"-useunzip"==b[i]&&(h=!0);if(isUndefined(a.name)){log("Checking remote OPack database");
c=getRemoteDB();e=findCaseInsensitive(c,b[0]);if(isUndefined(e)){logErr("No entry for '"+b[0]+"' on remote OPack database.");return}a=getPackage(e.repository.url);l||(m=getOpenAFPath()+"/"+a.name);b[0]=a.repository.url}if(checkVersion(a,d)||g)log((g?"COPYING":"INSTALLING")+" -- "+a.name+" version "+a.version);else{log("Checking remote OPack database");c=getRemoteDB();e=findCaseInsensitive(c,b[0]);if(isUndefined(e)){logErr("No entry for '"+b[0]+"' on remote OPack database.");return}a=getPackage(e.repository.url);
l||(m=getOpenAFPath()+"/"+a.name);b[0]=a.repository.url;if(checkVersion(a,d))log("UPDATING -- "+a.name+" version "+a.version);else return}l=verifyDeps(a);if(!d&&!g)for(i in a.dependencies)if(d=a.dependencies[i],!l[i]){logErr("Failed dependency on '"+i+"', version "+d+".");if("OPENAF"==i.toUpperCase()){logErr("Please update OpenAF (e.g. 'openaf --update')");return}log("Checking remote OPack database");c=getRemoteDB();e=findCaseInsensitive(c,i);if(isUndefined(e)){logErr("No entry for '"+i+"' on remote OPack database.");
return}if(!k&&(af.plugin("wedo.openaf.plugins.Console"),d=new Console,printnl("Do you want to try to install '"+i+"' [Y/N]: "),d=d.readChar("YNyn"),print(d),"N"==d||"n"==d))return;d=b.slice(0);d[0]=c[i].repository.url;install(d)}outputPath=m;isUndefined(a.scripts.preinstall)||g||runScript(a.scripts.preinstall);switch(a.__filelocation){case "url":log("Copying remote files...");parallel4Array(a.files,function(a){mkdir(outputPath);log("Copying "+a+"...");var c;try{c=new HTTP(b[0].replace(/ /g,"%20")+
"/"+a.replace(/ /g,"%20"),"GET","",{},!0),io.writeFileBytes(outputPath+"/"+a,c.responseBytes())}catch(p){logErr("Can't copy remote file '"+a+"' ("+p.message+")");return}return 1});log("All files copied.");break;case "opackurl":var q=getHTTPOPack(b[0]);if("undefined"==typeof q)return;biggestMessage=0;parallel4Array(a.files,function(a){mkdir(outputPath);lognl("Unpacking "+a+"...");try{io.writeFileBytes(outputPath+"/"+a,q.getFile(a))}catch(r){logErr("Can't write "+outputPath+"/"+a+" ("+r.message+")");
return}return 1});log("All files unpacked.");break;case "local":log("Copying files");biggestMessage=0;parallel4Array(a.files,function(a){try{mkdir(outputPath);var c="Copying "+a.replace(new RegExp("^"+b[0].replace(/\./g,"\\."),"")+"/","")+"...";log(c);copyFile(b[0]+"/"+a,outputPath+"/"+a.replace(new RegExp("^"+b[0].replace(/\./g,"\\."),"")+"/",""))}catch(p){logErr(p)}return 1});log("All files copied.");break;case "opacklocal":log("Copying files"),biggestMessage=0,parallel4Array(a.files,function(a){mkdir(outputPath);
var c="Copying "+a.replace(new RegExp("^"+b[0].replace(/\./g,"\\."),"")+"/","")+"...";log(c);try{if(h){if(sh("unzip -o "+b[0]+" "+a+" -d "+outputPath),0!=__exitcode)throw"Unzip exit code "+__exitcode+" for "+a;}else{var d=new ZIP;ioStreamCopy(io.writeFileStream(outputPath+"/"+a),d.streamGetFileStream(b[0],a))}}catch(t){logErr("Can't write "+outputPath+"/"+a+" ("+t.message+")");return}return 1}),log("All files copied.")}if(!n)for(i in log("Verifying package files installed..."),n=verifyHashList(outputPath,
a.filesHash),a.files)k=a.files[i],k!=PACKAGEJSON&&k!=PACKAGEYAML&&(n[k]||logErr("File '"+k+"' not equal to declared hash ('"+a.filesHash[k]+"')"));"undefined"===typeof a.scripts.postinstall||g||runScript(a.scripts.postinstall);log("Package "+a.name+" installed.");delete a.__filelocation;g||addLocalDB(a,outputPath)}else logErr("Can't install OpenAF. Please install manually or using another package manager (e.g. RPM). To update execute 'openaf --update'.")}
function __opack_exec(b){if(isUndefined(b[0])||"OPENAF"!=b[0].toUpperCase()){packag=findLocalDBByName(b[0]);if("undefined"==typeof packag||"undefined"==typeof packag.name){packag=getPackage(b[0]);if("local"!=packag.__filelocation){"opacklocal"==packag.__filelocation?logErr("Please use 'openaf-sb "+b[0]+"' instead."):logErr("Package not found (note: only installed or local packages can be executed)");return}b=b[0]}else b=findLocalDBTargetByName(b[0]);"undefined"!==typeof packag.main&&0<packag.main.length?
af.load(b+"/"+packag.main):isDef(packag.mainJob)&&0<packag.mainJob.length?oJobRunFile(b+"/"+packag.mainJob):logErr("Can't load package "+packag.name)}else logErr("Please use 'openaf' to execute OpenAF")}
function update(b){if(isUndefined(b[0])||"OPENAF"!=b[0].toUpperCase()){var a=getPackage(b[0]),c=!1,d=!1,e=!1,f=!1,g=!1;for(i in b)d&&(OPACKCENTRALDB=b[i],d=!1),e&&(arg=b[i],e=!1),"-arg"==b[i]&&(e=!0),"-force"==b[i]&&(c=!0),"-repo"==b[i]&&(d=!0),"-all"==b[i]&&(f=!0),"-erase"==b[i]&&(g=!0);if(f)for(i in b=[],c&&b.push("-force"),g&&b.push("-erase"),c=getOPackLocalDB(),c)"OPENAF"!=c[i].name.toUpperCase()&&(g=[],g.push(c[i].name),g=g.concat(b),update(g));else isUndefined(a)||"undefined"!=typeof a.name&&
"local"!=a.__filelocation||(a=getOPackRemoteDB()[$from(Object.keys(getOPackRemoteDB())).equals(b[0]).select()[0]]),isUndefined(a)||"undefined"===typeof a.name?c?install(b):logErr("Can't update!"):checkVersion(a,c)?("undefined"===typeof a.__filelocation||a.__filelocation.match(/opack/)||(b[0]=a.repository.url),log("UPDATING -- "+a.name+" version "+a.version),g&&g(b),install(b)):log("No need to update "+a.name)}else logErr("Please use 'openaf --update' to update OpenAF")}
function erase(b){if(isUndefined(b[0])||"OPENAF"!=b[0].toUpperCase()){checkOpenAFinDB();var a=getPackage(b[0]),c=!1,d=!1;for(i in b)d&&(arg=b[i],d=!1),"-arg"==b[i]&&(d=!0),"-force"==b[i]&&(c=!0);if("undefined"==typeof a||"undefined"==typeof a.name){a=findLocalDBByName(b[0]);if("undefined"==typeof a||"undefined"==typeof a.name){logErr("Package not found.");return}b[0]=findLocalDBTargetByName(b[0]);a.__filelocation="local"}else b[0]=a.name;if("undefined"!==typeof a.dependencies&&!c)for(pack in c=getLocalDB(!0),
c)if(isArray(c[pack].dependencies)&&"undefined"!==typeof c[pack].dependencies[a.name]){logErr("'"+c[pack].name+"' depends on '"+a.name+"'");return}"undefined"!==typeof a.scripts.preerase&&runScript(a.scripts.preerase);switch(a.__filelocation){case "url":logErr("Can't remove non local packages");break;case "opackurl":logErr("Can't remove non local packages");break;case "opacklocal":logErr("Please provide a local installed package location or the package name");break;case "local":log("Erasing files");
biggestMessage=0;for(i in a.files)c="Removing "+a.files[i].replace(/^\/*/,"")+"...",c.length>biggestMessage&&(biggestMessage=c.length),lognl(c),deleteFile(b[0]+"/"+a.files[i].replace(/^\/*/,""));c=af.listFiles(b[0]);for(i in c.files)c.files[i].isDirectory&&rmdir(c.files[i].filepath);rmdir(b[0]);log("Package "+a.name+" erased."+repeat(biggestMessage," "));removeLocalDB(a,b[0])}"undefined"!==typeof a.scripts.posterase&&runScript(a.scripts.posterase)}else logErr("Can't delete OpenAF. Please delete manually or using another package manager (e.g. RPM)")}
function remove(b){checkOpenAFindDB();var a=findLocalDBByName(b[0]);"undefined"==typeof a.name?logErr("Package not found on the local OpenPack DB."):(b[0]=findLocalDBTargetByName(b[0]),log("Removing from the local OpenPack DB: "+a.name+"("+a.version+") ["+findLocalDBTargetByName(a.name)+"]"),removeLocalDB(a,b[0]))}function removeCentral(b){removeRemoteDB(b[0],b[1])}
function addCentral(b){var a=getPackage(b[0]);"undefined"==typeof a.name?logErr("Package not found"):(log("Adding to central"),addRemoteDB(a,b[1]))}function add(b){checkOpenAFinDB();var a=getPackage(b[0]);"undefined"==typeof a.name?logErr("Package not found."):"local"!==a.__filelocation?logErr("Can't add non unpacked packs."):(delete a.__filelocation,log("Adding to the local OpenPack DB: "+a.name+"("+a.version+") ["+b[0]+"]"),addLocalDB(a,b[0]))}
function __opack_search(b){var a=[],c=!1,d=!1;for(i in b)c&&(OPACKCENTRALDB=b[i],c=!1),"-repo"==b[i]&&(c=!0);if("undefined"==typeof b[0]||""==b[0].trim())d=!0;var c=getRemoteDB(),e=Object.keys(c).sort();for(packId in e){var f=e[packId];if(d)a.push({name:c[f].name,version:c[f].version,description:c[f].description});else for(keyword in(c[f].name.match(new RegExp(b[0],"i"))||c[f].description.match(new RegExp(b[0],"i")))&&a.push({name:c[f].name,version:c[f].version,description:c[f].description}),c[f].keywords)keyword.match(new RegExp(b[0],
"i"))&&a.push({name:c[f].name,version:c[f].version,description:c[f].description})}for(result in a)print("["+a[result].name+"] (version "+a[result].version+"):\n  "+a[result].description+"\n")}
function pack(b){genpack(b);var a={};try{a=getPackage(b[0])}catch(f){}var c=new ZIP,d=a.name+"-"+a.version+".opack";af.rm(d);var e=0;for(i in a.files)e++,file=a.files[i],lognl("Packing ("+ow.format.round(100*e/a.files.length)+"%) "+ow.format.addNumberSeparator(e)+" files\r"),c.streamPutFileStream(d,file,io.readFileStream(b[0]+"/"+file));0<e&&print("");log("Writing "+d)}
function genpack(b){var a={};try{a=getPackage(b[0])}catch(d){}var c={};c.author="undefined"!==typeof a.author?a.author:"The author(s) name(s)";c.scripts="undefined"!==typeof a.scripts?a.scripts:{preerase:"",posterase:"",preinstall:"",postinstall:""};"undefined"!==typeof a.scripts&&(c.scripts.preerase="undefined"!==typeof a.scripts.preerase?a.scripts.preerase:"",c.scripts.posterase="undefined"!==typeof a.scripts.posterase?a.scripts.posterase:"",c.scripts.preinstall="undefined"!==typeof a.scripts.preinstall?
a.scripts.preinstall:"",c.scripts.postinstall="undefined"!==typeof a.scripts.postinstall?a.scripts.postinstall:"");c.keywords="undefined"!==typeof a.keywords?a.keywords:["Keyword1","keyword2"];c.bugs="undefined"!==typeof a.bugs?a.bugs:{url:"URL to track bugs"};c.repository="undefined"!==typeof a.repository?a.repository:{type:"http",url:"URL to main repository"};c.description="undefined"!==typeof a.description?a.description:"A nice description";c.name="undefined"!==typeof a.name?a.name:"A_nice_name";
c.main="undefined"!==typeof a.main?a.main:"";c.mainJob="undefined"!==typeof a.mainJob?a.mainJob:"";c.license="undefined"!==typeof a.license?a.license:"The licence description";c.version="undefined"!==typeof a.version?a.version:"20010101";c.dependencies="undefined"!==typeof a.dependencies?a.dependencies:{packa:"20100101",packb:"20120101"};c.files=listFiles(b[0]);0>c.files.indexOf(PACKAGEJSON)&&0>c.files.indexOf(PACKAGEYAML)&&(0>b.indexOf("-inyaml")?c.files.push(PACKAGEJSON):c.files.push(PACKAGEYAML));
c.filesHash=listFilesWithHash(b[0]);0<=b.indexOf("-inyaml")||0<=c.files.indexOf(PACKAGEYAML)?(log("Writing "+b[0]+"/"+PACKAGEYAML),io.writeFileString(b[0]+"/"+PACKAGEYAML,af.toYAML(c))):(log("Writing "+b[0]+"/"+PACKAGEJSON),io.writeFileString(b[0]+"/"+PACKAGEJSON,stringify(c)))}var showhelp=1,verbfound=0,params=__expr.split(/ +/);
for(i in verbs)if(!verbfound&&params[0]==i){params.splice(0,1);verb=i;switch(verb){case "info":__opack_info(params);break;case "install":install(params);break;case "erase":erase(params);break;case "list":__opack_list(params);break;case "genpack":genpack(params);break;case "pack":pack(params);break;case "add2db":add(params);break;case "remove2db":remove(params);break;case "add2remotedb":addCentral(params);break;case "remove2remotedb":removeCentral(params);break;case "search":__opack_search(params);
break;case "update":update(params);break;case "exec":__opack_exec(params)}showhelp=0}showhelp&&showHelp();
