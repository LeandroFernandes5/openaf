var requirements={javaversion:["^1.7"]},DEFAULT_SH="/bin/sh",javaargs="",i;for(i in __args)__args[i].match(/^args=/i)&&(javaargs=__args[i].replaceAll("^args=",""));""!=javaargs&&log("Java arguments to use = '"+javaargs+"'");function checkRequirements(){var a=0;for(i in requirements.javaversion)javaVer.match(requirements.javaversion[i])&&(a=1);a&&logErr("Current java version '"+javaVer+"' is not supported")}
function generateWinBat(){var a;a='@echo off\n\nrem if not %JAVA_HOME% == "" set JAVA_HOME="'+javaHome+'"\n';a=a+'set JAVA_HOME="'+javaHome+'"\n';a=a+'set OPENAF_DIR="'+classPath+'"\n';return a=a+"\n%JAVA_HOME%\\bin\\java "+javaargs+" -jar %OPENAF_DIR% %*"}
function generateWinPackBat(){var a;a='@echo off\n\nrem if not %JAVA_HOME% == "" set JAVA_HOME="'+javaHome+'"\n';a=a+'set JAVA_HOME="'+javaHome+'"\n';a=a+'set OPENAF_DIR="'+classPath+'"\n';return a=a+"\n%JAVA_HOME%\\bin\\java "+javaargs+' -jar %OPENAF_DIR% --opack -e "%*"'}
function generateWinJobBat(){var a;a='@echo off\n\nrem if not %JAVA_HOME% == "" set JAVA_HOME="'+javaHome+'"\n';a=a+'set JAVA_HOME="'+javaHome+'"\n';a=a+'set OPENAF_DIR="'+classPath+'"\n';return a=a+"\n%JAVA_HOME%\\bin\\java "+javaargs+' -jar %OPENAF_DIR% --ojob -e "%*"'}
function generateWinConsoleBat(){var a;a='@echo off\n\nrem if not %JAVA_HOME% == "" set JAVA_HOME="'+javaHome+'"\n';a=a+'set JAVA_HOME="'+javaHome+'"\n';a=a+'set OPENAF_DIR="'+classPath+'"\n';return a=a+"\n%JAVA_HOME%\\bin\\java "+javaargs+" -jar %OPENAF_DIR% --console %*"}
function generateWinConsolePSBat(){return"@echo off\n\npowershell -ExecutionPolicy Unrestricted -command \"&{ [Console]::OutputEncoding = [System.Text.Encoding]::GetEncoding(1252); $pshost = get-host; $console = $pshost.UI.RawUI; $console.WindowTitle = 'OpenAF-console'; $console.ForegroundColor = 'black'; $console.BackgroundColor = 'white'; $newsize = $console.buffersize; $newsize.width = 120; $newsize.height = 3000; $console.buffersize = $newsize; $newsize = $console.windowsize; $newsize.width = 120; $newsize.height = 55; $console.windowsize = $newsize; Clear-Host; $JAVA_HOME = '"+javaHome+
"'; $OPENAF_DIR = '"+classPath+"'; $cmd = '&\\\"' + $JAVA_HOME + '\\bin\\java\\\" "+javaargs+" -jar \"' + $OPENAF_DIR + '\" --console'; iex $cmd; }\""}
function generateUnixScript(a){var b;if("undefined"===typeof shLocation){if(1==windows)shLocation=DEFAULT_SH,javaHome=javaHome.replace(/\\/g,"/"),javaHome=javaHome.replace(/(\w)\:/,"/cygdrive/$1").toLowerCase();else try{shLocation=af.sh("which sh","",null,!1)}catch(c){logErr("Couldn't determine path for sh, assuming "+DEFAULT_SH+": "+c.message),shLocation=DEFAULT_SH}log("sh located in "+shLocation)}b="#!"+shLocation+"\n\n";b=b+'stty -icanon min 1 -echo 2>/dev/null\n#if [ -z "${JAVA_HOME}" ]; then \nJAVA_HOME="'+
javaHome+'"\n#fi\n';b=b+'OPENAF_DIR="'+classPath+'"\n';b=b+'\n"$JAVA_HOME"/bin/java '+javaargs+" -Djline.terminal=jline.UnixTerminal -jar $OPENAF_DIR "+a+"\n";return b+"stty icanon echo 2>/dev/null\n"}log("Generate scripts");var os="",curDir="",javaVer="",javaHome="",classPath="",windows=0,shLocation;
try{os=java.lang.System.getProperty("os.name")+"",curDir=java.lang.System.getProperty("user.dir")+"",javaVer=java.lang.System.getProperty("java.version")+"",javaHome=java.lang.System.getProperty("java.home")+"",classPath=java.lang.System.getProperty("java.class.path")+"",classPath=(new java.io.File(classPath)).getAbsoluteFile()}catch(a){logErr("Couldn't retrieve system properties: "+a.message),java.lang.System.exit(0)}
os.match(/Windows/)?(log("Identified system as Windows = '"+os+"'"),windows=1):(log("Identified system as a Unix flavour = '"+os+"'"),windows=0);log("Current directory = '"+curDir+"'");log("Running java version = '"+javaVer+"'");log("Current classpath = '"+classPath+"'");log("Java home = '"+javaHome+"'");log("Checking requirements");
var winBat=generateWinBat(),winPackBat=generateWinPackBat(),winJobBat=generateWinJobBat(),winConsoleBat=generateWinConsoleBat(),winConsolePSBat=generateWinConsolePSBat(),unixScript=generateUnixScript('"$@"'),unixSB=generateUnixScript('-s -i script -f "$@"'),unixPackScript=generateUnixScript('--opack -e "$*"'),unixJobScript=generateUnixScript('--ojob -e "$*"'),unixConsoleScript=generateUnixScript('--console "$@"');
try{1==windows&&io.writeFileString(curDir+"\\openaf.bat",winBat),1==windows&&io.writeFileString(curDir+"\\opack.bat",winPackBat),1==windows&&io.writeFileString(curDir+"\\ojob.bat",winJobBat),1==windows&&io.writeFileString(curDir+"\\openaf-console.bat",winConsoleBat),1==windows&&io.writeFileString(curDir+"\\openaf-console-ps.bat",winConsolePSBat),io.writeFileString(curDir+"/openaf",unixScript),io.writeFileString(curDir+"/openaf-sb",unixSB),io.writeFileString(curDir+"/opack",unixPackScript),io.writeFileString(curDir+
"/ojob",unixJobScript),io.writeFileString(curDir+"/openaf-console",unixConsoleScript)}catch(a){logErr("Couldn't write file: "+a.message),java.lang.System.exit(0)}if(0==windows)try{sh("chmod u+x "+curDir+"/openaf","",null,!1),sh("chmod u+x "+curDir+"/openaf-sb","",null,!1),sh("chmod u+x "+curDir+"/opack","",null,!1),sh("chmod u+x "+curDir+"/ojob","",null,!1),sh("chmod u+x "+curDir+"/openaf-console","",null,!1)}catch(a){logErr("Couldn't change permissions: "+a.message)}log("Verify the generated scripts and change the JAVA_HOME and/or OPENAF variables accordingly");
log("Done installing scripts");af.load(classPath+"::js/repack.js");
